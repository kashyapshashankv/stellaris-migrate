---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.17.1
  name: stellaris-migrate-nodes.migrate.k8s.stellaris.io
spec:
  group: migrate.k8s.stellaris.io
  names:
    kind: StellarisMigrateNode
    listKind: StellarisMigrateNodeList
    plural: stellaris-migrate-nodes
    singular: stellarismigratenode
  scope: Namespaced
  versions:
  - additionalPrinterColumns:
    - jsonPath: .status.phase
      name: Phase
      type: string
    - jsonPath: .status.vmIP
      name: VMIP
      type: string
    name: v1alpha1
    schema:
      openAPIV3Schema:
        description: |-
          StellarisMigrateNode is the Schema for the stellaris-migrate-nodes API that represents
          a node in the migration infrastructure with configuration, resource limits,
          and statistics for monitoring migration progress
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: Spec defines the desired state of StellarisMigrateNode
            properties:
              nodeRole:
                description: NodeRole is the role assigned to the node (e.g., "worker",
                  "controller")
                type: string
              openstackCreds:
                description: |-
                  OpenstackCreds is the reference to the credentials for the OpenStack environment
                  where the node will be provisioned
                properties:
                  apiVersion:
                    description: API version of the referent.
                    type: string
                  fieldPath:
                    description: |-
                      If referring to a piece of an object instead of an entire object, this string
                      should contain a valid JSON/Go field access statement, such as desiredState.manifest.containers[2].
                      For example, if the object reference is to a container within a pod, this would take on a value like:
                      "spec.containers{name}" (where "name" refers to the name of the container that triggered
                      the event) or if no container name is specified "spec.containers[2]" (container with
                      index 2 in this pod). This syntax is chosen only to have some well-defined way of
                      referencing a part of an object.
                    type: string
                  kind:
                    description: |-
                      Kind of the referent.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
                    type: string
                  name:
                    description: |-
                      Name of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names
                    type: string
                  namespace:
                    description: |-
                      Namespace of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/
                    type: string
                  resourceVersion:
                    description: |-
                      Specific resourceVersion to which this reference is made, if any.
                      More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#concurrency-control-and-consistency
                    type: string
                  uid:
                    description: |-
                      UID of the referent.
                      More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids
                    type: string
                type: object
                x-kubernetes-map-type: atomic
              openstackFlavorID:
                description: OpenstackFlavorID is the flavor of the VM
                type: string
              openstackImageID:
                description: OpenstackImageID is the image of the VM
                type: string
            required:
            - nodeRole
            - openstackCreds
            - openstackFlavorID
            - openstackImageID
            type: object
          status:
            description: Status defines the observed state of StellarisMigrateNode
            properties:
              activeMigrations:
                description: |-
                  ActiveMigrations is the list of active migrations currently being processed on this node,
                  containing references to MigrationPlan resources
                items:
                  type: string
                type: array
              openstackUUID:
                description: OpenstackUUID is the UUID of the VM in OpenStack
                type: string
              phase:
                description: |-
                  Phase is the current lifecycle phase of the node
                  (e.g., Provisioning, Ready, Error, Decommissioning)
                type: string
              vmIP:
                description: VMIP is the IP address of the VM
                type: string
            required:
            - vmIP
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
